{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1';\nclass AuthService {\n  async login(username, password) {\n    try {\n      console.log('Attempting login with username:', username);\n\n      // Store the credentials for future requests\n      this.setAuthHeader(username, password);\n      console.log('Auth header set, making test request to:', `${API_URL}/orders`);\n\n      // Make a test request to verify credentials\n      const response = await axios.get(`${API_URL}/orders`);\n      console.log('Login successful, response:', response.status);\n\n      // If the request is successful, store the credentials in local storage\n      localStorage.setItem('user', JSON.stringify({\n        username\n      }));\n      return true;\n    } catch (error) {\n      // If the request fails, clear the auth header\n      this.clearAuthHeader();\n      console.error('Login failed:', error.message);\n      if (error.response) {\n        console.error('Response status:', error.response.status);\n        console.error('Response data:', error.response.data);\n      }\n      throw error;\n    }\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.clearAuthHeader();\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem('user');\n  }\n  setAuthHeader(username, password) {\n    try {\n      const token = btoa(`${username}:${password}`);\n      console.log('Generated token for Basic Auth');\n      axios.defaults.headers.common['Authorization'] = `Basic ${token}`;\n      console.log('Authorization header set');\n    } catch (error) {\n      console.error('Error setting auth header:', error.message);\n    }\n  }\n  clearAuthHeader() {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n  setupAxiosInterceptors() {\n    axios.interceptors.response.use(response => response, error => {\n      if (error.response && error.response.status === 401) {\n        this.logout();\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n}\nconst authService = new AuthService();\nauthService.setupAxiosInterceptors();\nexport default authService;","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","console","log","setAuthHeader","response","get","status","localStorage","setItem","JSON","stringify","error","clearAuthHeader","message","data","logout","removeItem","getCurrentUser","parse","getItem","isAuthenticated","token","btoa","defaults","headers","common","setupAxiosInterceptors","interceptors","use","window","location","href","Promise","reject","authService"],"sources":["/Users/manohithakaudapola/IdeaProjects/demo/trade-platform/trade-ui/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/v1';\n\nclass AuthService {\n  async login(username, password) {\n    try {\n      console.log('Attempting login with username:', username);\n\n      // Store the credentials for future requests\n      this.setAuthHeader(username, password);\n\n      console.log('Auth header set, making test request to:', `${API_URL}/orders`);\n\n      // Make a test request to verify credentials\n      const response = await axios.get(`${API_URL}/orders`);\n\n      console.log('Login successful, response:', response.status);\n\n      // If the request is successful, store the credentials in local storage\n      localStorage.setItem('user', JSON.stringify({ username }));\n      return true;\n    } catch (error) {\n      // If the request fails, clear the auth header\n      this.clearAuthHeader();\n      console.error('Login failed:', error.message);\n      if (error.response) {\n        console.error('Response status:', error.response.status);\n        console.error('Response data:', error.response.data);\n      }\n      throw error;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.clearAuthHeader();\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  isAuthenticated() {\n    return !!localStorage.getItem('user');\n  }\n\n  setAuthHeader(username, password) {\n    try {\n      const token = btoa(`${username}:${password}`);\n      console.log('Generated token for Basic Auth');\n      axios.defaults.headers.common['Authorization'] = `Basic ${token}`;\n      console.log('Authorization header set');\n    } catch (error) {\n      console.error('Error setting auth header:', error.message);\n    }\n  }\n\n  clearAuthHeader() {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n\n  setupAxiosInterceptors() {\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && error.response.status === 401) {\n          this.logout();\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n}\n\nconst authService = new AuthService();\nauthService.setupAxiosInterceptors();\n\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}