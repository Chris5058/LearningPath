{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1';\nclass AuthService {\n  async login(username, password) {\n    try {\n      // Store the credentials for future requests\n      this.setAuthHeader(username, password);\n\n      // Make a test request to verify credentials\n      await axios.get(`${API_URL}/orders`);\n\n      // If the request is successful, store the credentials in local storage\n      localStorage.setItem('user', JSON.stringify({\n        username\n      }));\n      return true;\n    } catch (error) {\n      // If the request fails, clear the auth header\n      this.clearAuthHeader();\n      throw error;\n    }\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.clearAuthHeader();\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem('user');\n  }\n  setAuthHeader(username, password) {\n    const token = btoa(`${username}:${password}`);\n    axios.defaults.headers.common['Authorization'] = `Basic ${token}`;\n  }\n  clearAuthHeader() {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n  setupAxiosInterceptors() {\n    axios.interceptors.response.use(response => response, error => {\n      if (error.response && error.response.status === 401) {\n        this.logout();\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n}\nconst authService = new AuthService();\nauthService.setupAxiosInterceptors();\nexport default authService;","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","setAuthHeader","get","localStorage","setItem","JSON","stringify","error","clearAuthHeader","logout","removeItem","getCurrentUser","parse","getItem","isAuthenticated","token","btoa","defaults","headers","common","setupAxiosInterceptors","interceptors","response","use","status","window","location","href","Promise","reject","authService"],"sources":["/Users/manohithakaudapola/IdeaProjects/demo/trade-platform/trade-ui/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/v1';\n\nclass AuthService {\n  async login(username, password) {\n    try {\n      // Store the credentials for future requests\n      this.setAuthHeader(username, password);\n      \n      // Make a test request to verify credentials\n      await axios.get(`${API_URL}/orders`);\n      \n      // If the request is successful, store the credentials in local storage\n      localStorage.setItem('user', JSON.stringify({ username }));\n      return true;\n    } catch (error) {\n      // If the request fails, clear the auth header\n      this.clearAuthHeader();\n      throw error;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.clearAuthHeader();\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  isAuthenticated() {\n    return !!localStorage.getItem('user');\n  }\n\n  setAuthHeader(username, password) {\n    const token = btoa(`${username}:${password}`);\n    axios.defaults.headers.common['Authorization'] = `Basic ${token}`;\n  }\n\n  clearAuthHeader() {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n\n  setupAxiosInterceptors() {\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && error.response.status === 401) {\n          this.logout();\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n}\n\nconst authService = new AuthService();\nauthService.setupAxiosInterceptors();\n\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;AAE9C,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI;MACF;MACA,IAAI,CAACC,aAAa,CAACF,QAAQ,EAAEC,QAAQ,CAAC;;MAEtC;MACA,MAAML,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,SAAS,CAAC;;MAEpC;MACAO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAS,CAAC,CAAC,CAAC;MAC1D,OAAO,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd;MACA,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,MAAMD,KAAK;IACb;EACF;EAEAE,MAAMA,CAAA,EAAG;IACPN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACF,eAAe,CAAC,CAAC;EACxB;EAEAG,cAAcA,CAAA,EAAG;IACf,OAAON,IAAI,CAACO,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;EAEAC,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAACX,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;EACvC;EAEAZ,aAAaA,CAACF,QAAQ,EAAEC,QAAQ,EAAE;IAChC,MAAMe,KAAK,GAAGC,IAAI,CAAC,GAAGjB,QAAQ,IAAIC,QAAQ,EAAE,CAAC;IAC7CL,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAASJ,KAAK,EAAE;EACnE;EAEAP,eAAeA,CAAA,EAAG;IAChB,OAAOb,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;EAEAC,sBAAsBA,CAAA,EAAG;IACvBzB,KAAK,CAAC0B,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpBf,KAAK,IAAI;MACP,IAAIA,KAAK,CAACe,QAAQ,IAAIf,KAAK,CAACe,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACnD,IAAI,CAACf,MAAM,CAAC,CAAC;QACbgB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC;MACA,OAAOC,OAAO,CAACC,MAAM,CAACtB,KAAK,CAAC;IAC9B,CACF,CAAC;EACH;AACF;AAEA,MAAMuB,WAAW,GAAG,IAAIjC,WAAW,CAAC,CAAC;AACrCiC,WAAW,CAACV,sBAAsB,CAAC,CAAC;AAEpC,eAAeU,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}