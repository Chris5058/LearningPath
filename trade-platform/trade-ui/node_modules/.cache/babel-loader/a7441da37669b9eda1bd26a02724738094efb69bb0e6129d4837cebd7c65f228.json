{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1';\nclass OrderService {\n  async getAllOrders() {\n    try {\n      const response = await axios.get(`${API_URL}/orders`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      throw error;\n    }\n  }\n  async getOrderById(orderId) {\n    try {\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching order ${orderId}:`, error);\n      throw error;\n    }\n  }\n  async getOrdersByUserId(userId) {\n    try {\n      const response = await axios.get(`${API_URL}/orders/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching orders for user ${userId}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new OrderService();","map":{"version":3,"names":["axios","API_URL","OrderService","getAllOrders","response","get","data","error","console","getOrderById","orderId","getOrdersByUserId","userId"],"sources":["/Users/manohithakaudapola/IdeaProjects/demo/trade-platform/trade-ui/src/services/OrderService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/v1';\n\nclass OrderService {\n  async getAllOrders() {\n    try {\n      const response = await axios.get(`${API_URL}/orders`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      throw error;\n    }\n  }\n\n  async getOrderById(orderId) {\n    try {\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching order ${orderId}:`, error);\n      throw error;\n    }\n  }\n\n  async getOrdersByUserId(userId) {\n    try {\n      const response = await axios.get(`${API_URL}/orders/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching orders for user ${userId}:`, error);\n      throw error;\n    }\n  }\n}\n\nexport default new OrderService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;AAE9C,MAAMC,YAAY,CAAC;EACjB,MAAMC,YAAYA,CAAA,EAAG;IACnB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,SAAS,CAAC;MACrD,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,YAAYA,CAACC,OAAO,EAAE;IAC1B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,WAAWS,OAAO,EAAE,CAAC;MAChE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwBG,OAAO,GAAG,EAAEH,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF;EAEA,MAAMI,iBAAiBA,CAACC,MAAM,EAAE;IAC9B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,gBAAgBW,MAAM,EAAE,CAAC;MACpE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCK,MAAM,GAAG,EAAEL,KAAK,CAAC;MACjE,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAIL,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}